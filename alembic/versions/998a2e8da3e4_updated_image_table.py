"""updated image table

Revision ID: 998a2e8da3e4
Revises: 22204820cfbe
Create Date: 2024-11-27 21:37:40.597300

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "998a2e8da3e4"
down_revision: Union[str, None] = "22204820cfbe"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("images", "project_id", nullable=True)
    op.drop_column("images", "image_source")
    op.drop_column("images", "file_data")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "images",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column(
            "image_source", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column("file_data", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("url", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "image_category_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["image_category_id"],
            ["image_categories.id"],
            name="fk_images_image_category_id",
        ),
        sa.ForeignKeyConstraint(
            ["project_id"], ["projects.id"], name="images_project_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="images_pkey"),
    )
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('users_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("password_hash", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_admin", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        sa.UniqueConstraint("email", name="users_email_key"),
        sa.UniqueConstraint("name", name="users_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "projects",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "tech_stack", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("url", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "project_category_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["project_category_id"],
            ["project_categories.id"],
            name="projects_project_category_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="projects_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="projects_pkey"),
    )
    op.create_table(
        "project_categories",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="project_categories_pkey"),
    )
    op.create_table(
        "skill_categories",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('skill_categories_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="skill_categories_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "contact_messages",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column(
            "category", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("message", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="contact_messages_pkey"),
    )
    op.create_table(
        "image_categories",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="image_categories_pkey"),
    )
    op.create_table(
        "experiences",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "company_name", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("role", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("start_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("end_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="experiences_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="experiences_pkey"),
    )
    op.create_table(
        "skills",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "skill_category_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "skill_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column(
            "proficiency_level",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["skill_category_id"],
            ["skill_categories.id"],
            name="skills_skill_category_id_fkey",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="skills_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="skills_pkey"),
    )
    # ### end Alembic commands ###
